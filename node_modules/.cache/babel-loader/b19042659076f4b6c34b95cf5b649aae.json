{"ast":null,"code":"var _jsxFileName = \"/Users/sebastian/coding/manager-pro/src/components/dashboard/Board.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { CreateTask } from \"../task/CreateTask\";\nimport { Task } from \"../task/Task\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = _ref => {\n  _s();\n\n  let {\n    tasks,\n    sectionName,\n    setTasks\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const initialState = {\n    id: \"\",\n    title: \"\",\n    description: \"\",\n    category: sectionName\n  };\n  const [taskFormData, setTaskFormData] = useState(initialState);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTaskFormData({ ...taskFormData,\n      [name]: value\n    });\n  };\n\n  const createTask = () => {\n    const newTask = {\n      id: nanoid(),\n      title: taskFormData.title,\n      description: taskFormData.description,\n      category: sectionName\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n    setTaskFormData(initialState);\n    setShowModal(false);\n  };\n\n  const deleteTask = id => {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n  };\n\n  const editTask = (id, title, description, category) => {\n    const updatedTask = tasks.find(task => task.id === id);\n    if (!updatedTask) return;\n    updatedTask.title = title;\n    updatedTask.description = description;\n    updatedTask.category = category;\n    setTasks(prevTasks => [...prevTasks, {\n      updatedTask\n    }]);\n    setShowEditModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" bg-gray-200 w-full mt-10 mx-5 rounded-md min-h-[50vh]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-5 my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl\",\n          children: sectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-2xl\",\n          onClick: () => setShowModal(true),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), tasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          id: task.id,\n          description: task.description,\n          category: task.category,\n          title: task.title,\n          deleteTask: deleteTask,\n          setShowEditModal: setShowEditModal,\n          showEditModal: showEditModal,\n          editTask: editTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(CreateTask, {\n      setShowModal: setShowModal,\n      handleChange: handleChange,\n      taskFormData: taskFormData,\n      createTask: createTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Board, \"C/3jmhUk9W+Zi5Nvu0eBnWbAkWw=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","CreateTask","Task","nanoid","Board","tasks","sectionName","setTasks","showModal","setShowModal","showEditModal","setShowEditModal","initialState","id","title","description","category","taskFormData","setTaskFormData","handleChange","event","name","value","target","createTask","newTask","prevTasks","deleteTask","filter","task","editTask","updatedTask","find","map"],"sources":["/Users/sebastian/coding/manager-pro/src/components/dashboard/Board.tsx"],"sourcesContent":["import { ChangeEvent, useState } from \"react\";\nimport { CreateTask } from \"../task/CreateTask\";\nimport { ITask, Sections } from \"./Section\";\nimport { Task } from \"../task/Task\";\nimport { nanoid } from \"nanoid\";\n\ninterface IProps {\n  tasks: ITask[];\n  sectionName: Sections;\n  setTasks: (task: any) => void;\n}\nexport const Board = ({ tasks, sectionName, setTasks }: IProps) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const initialState = {\n    id: \"\",\n    title: \"\",\n    description: \"\",\n    category: sectionName,\n  };\n  const [taskFormData, setTaskFormData] = useState(initialState);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = event.target;\n    setTaskFormData({\n      ...taskFormData,\n      [name]: value,\n    });\n  };\n\n  const createTask = () => {\n    const newTask = {\n      id: nanoid(),\n      title: taskFormData.title,\n      description: taskFormData.description,\n      category: sectionName,\n    };\n    setTasks((prevTasks: ITask[]) => [...prevTasks, newTask]);\n    setTaskFormData(initialState);\n    setShowModal(false);\n  };\n\n  const deleteTask = (id: string) => {\n    setTasks((prevTasks: ITask[]) =>\n      prevTasks.filter((task) => task.id !== id)\n    );\n  };\n  const editTask = (\n    id: string,\n    title: string,\n    description: string,\n    category: string\n  ) => {\n    const updatedTask = tasks.find((task) => task.id === id);\n    if (!updatedTask) return;\n\n    updatedTask.title = title;\n\n    updatedTask.description = description;\n\n    updatedTask.category = category;\n\n    setTasks((prevTasks: ITask[]) => [...prevTasks, { updatedTask }]);\n\n    setShowEditModal(false);\n  };\n\n  return (\n    <div className=\" bg-gray-200 w-full mt-10 mx-5 rounded-md min-h-[50vh]\">\n      <div className=\"mx-5 my-2\">\n        <div className=\"flex justify-between\">\n          <h2 className=\"text-2xl\">{sectionName}</h2>\n          <button className=\"text-2xl\" onClick={() => setShowModal(true)}>\n            +\n          </button>\n        </div>\n\n        {tasks.map((task) => {\n          return (\n            <Task\n              key={task.id}\n              id={task.id}\n              description={task.description}\n              category={task.category}\n              title={task.title}\n              deleteTask={deleteTask}\n              setShowEditModal={setShowEditModal}\n              showEditModal={showEditModal}\n              editTask={editTask}\n            />\n          );\n        })}\n      </div>\n      {showModal && (\n        <CreateTask\n          setShowModal={setShowModal}\n          handleChange={handleChange}\n          taskFormData={taskFormData}\n          createTask={createTask}\n        />\n      )}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}